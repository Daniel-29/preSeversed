npm i bootswatch bootstrap jquery @popperjs/core
npm i ngx-toastr

@import "~bootswatch/dist/lux/variables";
@import "~bootstrap/scss/bootstrap";
@import "~bootswatch/dist/lux/bootswatch";

"node_modules/jquery/dist/jquery.min.js",
"node_modules/@popperjs/core/dist/umd/popper.min.js",
"node_modules/bootstrap/dist/js/bootstrap.min.js"

    "paths": {
      "@app/*": [
        "src/app/*"
      ],
      "@shared/*": [
        "src/app/shared/*"
      ],
      "@enviroment/*": [
        "src/environments/*"
      ],
    },

ng g m components/main -m=app --route main

ng g m shared/components/name

ng g c shared/components/name --module app

ng g s shared/services/api

import { ReactiveFormsModule } from '@angular/forms';
import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';

this.router.navigate(['/edit'],{state:{item:item,index:i}});

const navigation =this.router.getCurrentNavigation();
this.value = navigation?.extras?.state;

import { BehaviorSubject, Observable, of, Subject } from 'rxjs';
import { pluck, take, tap, withLatestFrom } from 'rxjs/operators';
import { HttpClient, HttpErrorResponse, HttpHeaders, } from '@angular/common/http';

private peopleSubject = new BehaviorSubject<any[]>([]);
listPeople$ = this.peopleSubject.asObservable();

*ngFor="let item of people$ | async as list let i = index"

import { environment } from '@enviroment/environment';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';


[formGroup]="agregarPeliculaFM" (ngSubmit)="onSendForm()"


  formPassword = new FormGroup({
    "new_password": new FormControl('', [
      Validators.required,
      Validators.minLength(5),
      Validators.maxLength(25),
      Validators.pattern(environment.PasswordValidation),
    ]),
    "confirm_password": new FormControl('', [
      Validators.required,
      Validators.maxLength(25),
      Validators.minLength(5),
      Validators.pattern(environment.PasswordValidation),
    ]),
    "old_password": new FormControl('', [
      Validators.required,
      Validators.maxLength(25),
      Validators.minLength(5),
      Validators.pattern(environment.PasswordValidation),
    ])
  });



